{"version":3,"sources":["utils/DB.js","components/QuestionCard/QuestionCard.js","components/QuestionCard/index.js","components/ScoreCard/ScoreCard.js","components/ScoreCard/index.js","pages/home.js","ReducersActions/Answered/action.js","ReducersActions/Users/action.js","ReducersActions/Questions/action.js","ReducersActions/LoggedInUser/action.js","pages/createQuestion.js","pages/leaderboard.js","pages/login.js","pages/question.js","App.js","ReducersActions/Answered/reducer.js","ReducersActions/Unanswered/reducer.js","ReducersActions/Unanswered/action.js","ReducersActions/Users/reducer.js","ReducersActions/Questions/reducer.js","ReducersActions/LoggedInUser/reducer.js","ReducersActions/reducers.js","store.js","index.js"],"names":["users","sarahedo","id","name","avatarURL","answers","8xf0y6ziyjabvozdd253nd","6ni6ok3ym7mf1p33lnez","am8ehyc8byjqgar0jgpub9","loxhs1bqm25b708cmbf3g","questions","tylermcginnis","vthrdm985a262al8qx3do","xj352vofupe1dqz9emx13r","johndoe","author","timestamp","optionOne","votes","text","optionTwo","_saveQuestion","question","Promise","res","rej","authedUser","formattedQuestion","_ref","optionOneText","optionTwoText","Math","random","toString","substring","Date","now","formatQuestion","setTimeout","Object","objectSpread","defineProperty","concat","QuestionCard","state","selectedAnswer","selectAnswer","e","value","target","_this","setState","submitAnswer","props","_this$props","this","isEditing","viewPoll","optionOnePercentage","optionTwoPercentage","optionOneVotes","optionTwoVotes","totalVotes","userChosen","_users$author","react_default","a","createElement","Wrapper","NameWrapper","QuestionWrapper","style","width","src","alt","height","OptionsWrapper","OptionWrapper","chosen","Info","className","react_router_dom","to","type","onClick","disabled","React","Component","styled","div","_templateObject","_templateObject2","_templateObject3","_templateObject4","_templateObject5","span","_templateObject6","connect","store","withStore","ScoreCard_templateObject","isAuthorLoggedIn","ImageWrapper","ScoreCard_templateObject2","QuestionsWrapper","ScoreCard_templateObject3","ScoreWrapper","ScoreCard_templateObject4","ScoreCard","answeredQuestions","createdQuestions","score","ScoreCard_Wrapper","Home","showAnsweredQuestions","unAnsweredQuestions","toggleTabs","showAnswered","checkQuestions","loggedInUser","keys","sort","b","forEach","key","assign","_this2","_this$state","answeredQuestionsView","values","map","components_QuestionCard","unAnsweredQuestionsView","home_Wrapper","List","active","home_QuestionsWrapper","home_templateObject","home_templateObject2","li","home_templateObject3","SET","UPDATE","updateUsers","updateQuestions","updateLoggedInUser","CreateQuestion","handleChange","_e$target","createQuestion","history","userId","then","response","object","push","catch","error","console","log","_this$state2","createQuestion_Wrapper","createQuestion_QuestionWrapper","placeholder","onChange","createQuestion_templateObject","createQuestion_templateObject2","dispatch","_ref2","withRouter","Leaderboard","sortedUsers","sortUsers","length","questionsA","answersA","questionsB","answersB","totalForA","prevProps","scoreCardView","user","components_ScoreCard","leaderboard_Wrapper","Header","BoardWrapper","leaderboard_templateObject","h3","leaderboard_templateObject2","leaderboard_templateObject3","Login","selectedUser","selectUser","setLoggedInUser","usersView","buttonText","login_Wrapper","data-toggle","login_templateObject","Question","showAnswerView","checkQuestionType","_this$props2","match","params","questionId","toFixed","editAnswerView","question_Wrapper","question_templateObject","App","getQuestions","setQuestions","data","clearLoggedInUser","getUsers","setUsers","window","location","pathname","react_router","exact","component","path","reducer","arguments","undefined","action","_action$value","combineReducers","createStore","ReactDOM","render","es","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.0542633f.chunk.js","sourcesContent":["let users = {\r\n  sarahedo: {\r\n    id: 'sarahedo',\r\n    name: 'Sarah Edo',\r\n    avatarURL: \"https://car-pictures.cars.com/images/?IMG=USC60LGC052A01309.jpg\",\r\n    answers: {\r\n      \"8xf0y6ziyjabvozdd253nd\": 'optionOne',\r\n      \"6ni6ok3ym7mf1p33lnez\": 'optionTwo',\r\n      \"am8ehyc8byjqgar0jgpub9\": 'optionTwo',\r\n      \"loxhs1bqm25b708cmbf3g\": 'optionTwo'\r\n    },\r\n    questions: ['8xf0y6ziyjabvozdd253nd', 'am8ehyc8byjqgar0jgpub9']\r\n  },\r\n  tylermcginnis: {\r\n    id: 'tylermcginnis',\r\n    name: 'Tyler McGinnis',\r\n    avatarURL: \"https://car-pictures.cars.com/images/?IMG=USC60LGC052A01309.jpg\",\r\n    answers: {\r\n      \"vthrdm985a262al8qx3do\": 'optionOne',\r\n      \"xj352vofupe1dqz9emx13r\": 'optionTwo',\r\n    },\r\n    questions: ['loxhs1bqm25b708cmbf3g', 'vthrdm985a262al8qx3do'],\r\n  },\r\n  johndoe: {\r\n    id: 'johndoe',\r\n    name: 'John Doe',\r\n    avatarURL: \"https://car-pictures.cars.com/images/?IMG=USC60LGC052A01309.jpg\",\r\n    answers: {\r\n      \"xj352vofupe1dqz9emx13r\": 'optionOne',\r\n      \"vthrdm985a262al8qx3do\": 'optionTwo',\r\n      \"6ni6ok3ym7mf1p33lnez\": 'optionTwo'\r\n    },\r\n    questions: ['6ni6ok3ym7mf1p33lnez', 'xj352vofupe1dqz9emx13r'],\r\n  }\r\n}\r\n\r\nlet questions = {\r\n  \"8xf0y6ziyjabvozdd253nd\": {\r\n    id: '8xf0y6ziyjabvozdd253nd',\r\n    author: 'sarahedo',\r\n    timestamp: 1467166872634,\r\n    optionOne: {\r\n      votes: ['sarahedo'],\r\n      text: 'have horrible short term memory',\r\n    },\r\n    optionTwo: {\r\n      votes: [],\r\n      text: 'have horrible long term memory'\r\n    }\r\n  },\r\n  \"6ni6ok3ym7mf1p33lnez\": {\r\n    id: '6ni6ok3ym7mf1p33lnez',\r\n    author: 'johndoe',\r\n    timestamp: 1468479767190,\r\n    optionOne: {\r\n      votes: [],\r\n      text: 'become a superhero',\r\n    },\r\n    optionTwo: {\r\n      votes: ['johndoe', 'sarahedo'],\r\n      text: 'become a supervillain'\r\n    }\r\n  },\r\n  \"am8ehyc8byjqgar0jgpub9\": {\r\n    id: 'am8ehyc8byjqgar0jgpub9',\r\n    author: 'sarahedo',\r\n    timestamp: 1488579767190,\r\n    optionOne: {\r\n      votes: [],\r\n      text: 'be telekinetic',\r\n    },\r\n    optionTwo: {\r\n      votes: ['sarahedo'],\r\n      text: 'be telepathic'\r\n    }\r\n  },\r\n  \"loxhs1bqm25b708cmbf3g\": {\r\n    id: 'loxhs1bqm25b708cmbf3g',\r\n    author: 'tylermcginnis',\r\n    timestamp: 1482579767190,\r\n    optionOne: {\r\n      votes: [],\r\n      text: 'be a front-end developer',\r\n    },\r\n    optionTwo: {\r\n      votes: ['sarahedo'],\r\n      text: 'be a back-end developer'\r\n    }\r\n  },\r\n  \"vthrdm985a262al8qx3do\": {\r\n    id: 'vthrdm985a262al8qx3do',\r\n    author: 'tylermcginnis',\r\n    timestamp: 1489579767190,\r\n    optionOne: {\r\n      votes: ['tylermcginnis'],\r\n      text: 'find $50 yourself',\r\n    },\r\n    optionTwo: {\r\n      votes: ['johndoe'],\r\n      text: 'have your best friend find $500'\r\n    }\r\n  },\r\n  \"xj352vofupe1dqz9emx13r\": {\r\n    id: 'xj352vofupe1dqz9emx13r',\r\n    author: 'johndoe',\r\n    timestamp: 1493579767190,\r\n    optionOne: {\r\n      votes: ['johndoe'],\r\n      text: 'write JavaScript',\r\n    },\r\n    optionTwo: {\r\n      votes: ['tylermcginnis'],\r\n      text: 'write Swift'\r\n    }\r\n  },\r\n}\r\n\r\nfunction generateUID () {\r\n  return Math.random().toString(36).substring(2, 15) + Math.random().toString(36).substring(2, 15)\r\n}\r\n\r\nexport function _getUsers () {\r\n  return new Promise((res, rej) => {\r\n    setTimeout(() => res({...users}), 1000)\r\n  })\r\n}\r\n\r\nexport function _getQuestions () {\r\n  return new Promise((res, rej) => {\r\n    setTimeout(() => res({...questions}), 1000)\r\n  })\r\n}\r\n\r\nfunction formatQuestion ({ optionOneText, optionTwoText, author }) {\r\n  return {\r\n    id: generateUID(),\r\n    timestamp: Date.now(),\r\n    author,\r\n    optionOne: {\r\n      votes: [],\r\n      text: optionOneText,\r\n    },\r\n    optionTwo: {\r\n      votes: [],\r\n      text: optionTwoText,\r\n    }\r\n  }\r\n}\r\n\r\nexport function _saveQuestion (question) {\r\n  return new Promise((res, rej) => {\r\n    const authedUser = question.author;\r\n    const formattedQuestion = formatQuestion(question);\r\n\r\n    setTimeout(() => {\r\n      questions = {\r\n        ...questions,\r\n        [formattedQuestion.id]: formattedQuestion\r\n      }\r\n\r\n      users = {\r\n        ...users,\r\n        [authedUser]: {\r\n          ...users[authedUser],\r\n          questions: users[authedUser].questions.concat([formattedQuestion.id])\r\n        }\r\n      }\r\n\r\n      res(formattedQuestion)\r\n    }, 1000)\r\n  })\r\n}\r\n\r\nexport function _saveQuestionAnswer ({ authedUser, qid, answer }) {\r\n  return new Promise((res, rej) => {\r\n    setTimeout(() => {\r\n      users = {\r\n        ...users,\r\n        [authedUser]: {\r\n          ...users[authedUser],\r\n          answers: {\r\n            ...users[authedUser].answers,\r\n            [qid]: answer\r\n          }\r\n        }\r\n      }\r\n\r\n      questions = {\r\n        ...questions,\r\n        [qid]: {\r\n          ...questions[qid],\r\n          [answer]: {\r\n            ...questions[qid][answer],\r\n            votes: questions[qid][answer].votes.concat([authedUser])\r\n          }\r\n        }\r\n      }\r\n\r\n      res()\r\n    }, 500)\r\n  })\r\n}\r\n","import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport styled from \"styled-components\";\r\n\r\nclass QuestionCard extends React.Component {\r\n  state = {\r\n    selectedAnswer: \"\"\r\n  }\r\n\r\n  selectAnswer = (e) => {\r\n    const {value} = e.target;\r\n    this.setState({\r\n      selectedAnswer: value\r\n    });\r\n  }\r\n\r\n  submitAnswer = () => {\r\n    const {selectedAnswer} = this.state;\r\n    const {submitAnswer} = this.props;\r\n    submitAnswer(selectedAnswer);\r\n  }\r\n  render () {\r\n    const {\r\n      id,\r\n      isEditing,\r\n      author,\r\n      optionOne,\r\n      optionTwo,\r\n      users,\r\n      viewPoll,\r\n      optionOnePercentage,\r\n      optionTwoPercentage,\r\n      optionOneVotes,\r\n      optionTwoVotes,\r\n      totalVotes,\r\n      userChosen\r\n    } = this.props;\r\n\r\n    if (!users || !users[author]) {\r\n      return null;\r\n    }\r\n\r\n    const {\r\n      avatarURL,\r\n      name\r\n    } = users[author];\r\n\r\n    const {selectedAnswer} = this.state;\r\n\r\n    return (\r\n      <Wrapper>\r\n        <NameWrapper>{name} asks: </NameWrapper>\r\n        <QuestionWrapper>\r\n          <div style={{width: \"20%\"}}>\r\n            <img src={avatarURL} alt=\"\" style={{width: \"50px\", height: \"50px\"}} />\r\n          </div>\r\n          <div style={{width: \"60%\"}}>\r\n            <h4>Would you rather</h4>\r\n            {!isEditing && !viewPoll &&\r\n              <OptionsWrapper>\r\n                <OptionWrapper chosen={userChosen===\"optionOne\"}>\r\n                  <p>{optionOne.text}</p>\r\n                  <p>{optionOnePercentage}% - {optionOneVotes} out of {totalVotes}</p>\r\n                  {userChosen===\"optionOne\" && <Info>Your vote</Info>}\r\n                </OptionWrapper>\r\n                <br />\r\n                <OptionWrapper chosen={userChosen===\"optionTwo\"}>\r\n                  <p>{optionTwo.text}</p>\r\n                  <p>{optionTwoPercentage}% - {optionTwoVotes} out of {totalVotes}</p>\r\n                  {userChosen===\"optionTwo\" && <Info>Your vote</Info>}\r\n                </OptionWrapper>\r\n              </OptionsWrapper>\r\n            }\r\n            {!isEditing && !!viewPoll &&\r\n              <OptionsWrapper>\r\n                <p>{optionOne.text}</p>\r\n                <p>Or</p>\r\n                <p>{optionTwo.text}</p>\r\n                <button\r\n                  className=\"btn btn-primary w-100\"\r\n                >\r\n                  <Link to={`/questions/${id}`}>\r\n                    {viewPoll}\r\n                  </Link>\r\n                </button>\r\n              </OptionsWrapper>\r\n            }\r\n            {!!isEditing &&\r\n              <OptionsWrapper>\r\n                <input\r\n                  className=\"my-3\"\r\n                  type=\"radio\"\r\n                  name=\"answer\"\r\n                  value=\"optionOne\"\r\n                  onClick={this.selectAnswer}\r\n                />&nbsp;{optionOne.text}\r\n                <br />\r\n                <input\r\n                  className=\"my-3\"\r\n                  type=\"radio\"\r\n                  name=\"answer\"\r\n                  value=\"optionTwo\"\r\n                  onClick={this.selectAnswer}\r\n                />&nbsp;{optionTwo.text}\r\n                <br />\r\n                <button\r\n                  className=\"btn btn-primary w-100 mt-4 py-2\"\r\n                  disabled={!selectedAnswer}\r\n                  onClick={this.submitAnswer}\r\n                >\r\n                  Submit\r\n                </button>\r\n              </OptionsWrapper>\r\n            }\r\n          </div>\r\n        </QuestionWrapper>\r\n      </Wrapper>\r\n    );\r\n  }\r\n}\r\n\r\nconst Wrapper = styled.div`\r\n  margin: 5px auto;\r\n`;\r\n\r\nconst NameWrapper = styled.div`\r\n  padding: 10px 20px;\r\n  background-color: lightgray;\r\n  text-align: left;\r\n  border-radius: 5px 5px 0 0;\r\n`;\r\n\r\nconst QuestionWrapper = styled.div`\r\n  display: flex;\r\n  padding: 2% 5%;\r\n  border: 1px solid lightgray;\r\n  text-align: left;\r\n`;\r\n\r\nconst OptionsWrapper = styled.div`\r\n  margin: 10px auto;\r\n  button {\r\n    margin: 10px 0;\r\n    padding: 0;\r\n  }\r\n  p {\r\n    margin: 5px 0;\r\n  }\r\n  a {\r\n    color: white;\r\n    padding: 0.375em 0.75em;\r\n    display: block;\r\n  }\r\n`;\r\n\r\nconst OptionWrapper = styled.div`\r\n  background-color: lightgrey;\r\n  border-radius: 5px;\r\n  padding: 10px;\r\n  position: relative;\r\n  ${props=> props.chosen && `\r\n    background-color: skyblue;\r\n  `}\r\n`;\r\n\r\nconst Info = styled.span`\r\n  position: absolute;\r\n  top: 30%;\r\n  right: -3%;\r\n  width: 35px;\r\n  height: 45px;\r\n  font-size: 12px;\r\n  background: #e88043;\r\n  border-radius: 10px;\r\n  padding: 5px;\r\n  color: white;\r\n`;\r\n\r\nconst mapStateToProps = (store) => {\r\n  const {\r\n    users\r\n  } = store;\r\n\r\n  return {\r\n    users\r\n  };\r\n};\r\n\r\nconst withStore = connect(mapStateToProps);\r\n\r\n\r\nexport default withStore(QuestionCard);\r\n","import QuestionCard from \"./QuestionCard\";\r\n\r\nexport default QuestionCard;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst ScoreCard = ({\r\n  author,\r\n  avatarURL,\r\n  answeredQuestions,\r\n  createdQuestions,\r\n  isAuthorLoggedIn,\r\n  score\r\n}) => (\r\n  <Wrapper className=\"row\" isAuthorLoggedIn={isAuthorLoggedIn}>\r\n    <ImageWrapper>\r\n      <img src={avatarURL} alt=\"Author\" style={{width:\"50px\", height: \"50px\"}} />\r\n    </ImageWrapper>\r\n    <QuestionsWrapper>\r\n      <h3>{author}</h3>\r\n      <p>Answered Questions: {answeredQuestions}</p>\r\n      <p>Created Questions: {createdQuestions}</p>\r\n    </QuestionsWrapper>\r\n    <ScoreWrapper>\r\n      <h3>Score</h3>\r\n      <h1>{score}</h1>\r\n    </ScoreWrapper>\r\n  </Wrapper>\r\n);\r\n\r\nconst Wrapper = styled.div`\r\n  justify-content: space-evenly;\r\n  margin: 5px;\r\n  box-shadow: 0 0 5px black;\r\n  border-radius: 5px;\r\n  padding: 20px 0;\r\n\r\n  ${props => props.isAuthorLoggedIn && `\r\n    background-color: skyblue;\r\n    color: white;\r\n  `}\r\n`;\r\n\r\nconst ImageWrapper = styled.div`\r\n  border-right: 1px solid lightgray;\r\n  width: 25%;\r\n`;\r\n\r\nconst QuestionsWrapper = styled.div`\r\n  width: 50%;\r\n`;\r\n\r\nconst ScoreWrapper = styled.div`\r\n  border-left: 1px solid lightgray;\r\n  width: 25%;\r\n`;\r\n\r\nexport default ScoreCard;\r\n","import ScoreCard from \"./ScoreCard\";\r\n\r\nexport default ScoreCard;\r\n","import React from \"react\";\r\nimport styled from  \"styled-components\";\r\nimport {connect} from \"react-redux\";\r\nimport {QuestionCard} from \"../components\";\r\n\r\nclass Home extends React.Component {\r\n  state = {\r\n    showAnsweredQuestions: false,\r\n    answeredQuestions: {},\r\n    unAnsweredQuestions: {}\r\n  }\r\n  componentDidMount () {\r\n    this.checkQuestions();\r\n  }\r\n\r\n  toggleTabs = (showAnswered) => {\r\n    this.setState({\r\n      showAnsweredQuestions: showAnswered\r\n    });\r\n  }\r\n\r\n  checkQuestions = () => {\r\n    const {\r\n      questions,\r\n      loggedInUser\r\n    } = this.props;\r\n    let answeredQuestions = {};\r\n    let unAnsweredQuestions = {};\r\n    // keys sort\r\n    // sortedkeys\r\n    const sortedKeys = Object.keys(questions).sort((a,b) => {\r\n      return questions[b].timestamp - questions[a].timestamp;\r\n    });\r\n    sortedKeys.forEach(key => {\r\n      if (loggedInUser.answers[key]) {\r\n        answeredQuestions[key] = Object.assign({}, questions[key]);\r\n      }\r\n      else {\r\n        unAnsweredQuestions[key] = Object.assign({}, questions[key]);\r\n      }\r\n    });\r\n    this.setState({\r\n      answeredQuestions,\r\n      unAnsweredQuestions\r\n    });\r\n  }\r\n\r\n  render () {\r\n    const {\r\n      answeredQuestions,\r\n      unAnsweredQuestions,\r\n      showAnsweredQuestions\r\n    } = this.state;\r\n\r\n    if (!answeredQuestions && !unAnsweredQuestions) {\r\n      return null;\r\n    }\r\n\r\n    const answeredQuestionsView = Object.values(answeredQuestions).map((question) => {\r\n      const {\r\n        author,\r\n        id,\r\n        optionOne,\r\n        optionTwo\r\n      } = question;\r\n      return(\r\n        <QuestionCard\r\n          author={author}\r\n          id={id}\r\n          key={id}\r\n          optionOne={optionOne}\r\n          optionTwo={optionTwo}\r\n          viewPoll=\"View Poll\"\r\n        />\r\n      )\r\n    });\r\n\r\n    const unAnsweredQuestionsView = Object.values(unAnsweredQuestions).map((question) => {\r\n      const {\r\n        author,\r\n        id,\r\n        optionOne,\r\n        optionTwo\r\n      } = question;\r\n      return(\r\n        <QuestionCard\r\n          author={author}\r\n          id={id}\r\n          key={id}\r\n          optionOne={optionOne}\r\n          optionTwo={optionTwo}\r\n          viewPoll=\"Answer\"\r\n        />\r\n      )\r\n    });\r\n\r\n    return (\r\n      <Wrapper>\r\n        <div>\r\n          <nav className=\"navbar navbar-expand-sm bg-info navbar-light mt-3 pb-1\">\r\n            <ul className=\"navbar-nav w-100\">\r\n              <List className=\"nav-item w-50\" active={!showAnsweredQuestions}>\r\n                <button\r\n                  className=\"btn text-white\"\r\n                  onClick={() => this.toggleTabs(false)}\r\n                >\r\n                  Unanswered Questions\r\n                </button>\r\n              </List>\r\n              <List className=\"nav-item w-50\" active={!!showAnsweredQuestions}>\r\n                <button\r\n                  className=\"btn text-white\"\r\n                  onClick={() => this.toggleTabs(true)}\r\n                >\r\n                  Answered Questions\r\n                </button>\r\n              </List>\r\n            </ul>\r\n          </nav>\r\n        </div>\r\n        <QuestionsWrapper>\r\n          {!!showAnsweredQuestions && answeredQuestionsView}\r\n          {!showAnsweredQuestions && unAnsweredQuestionsView}\r\n        </QuestionsWrapper>\r\n      </Wrapper>\r\n    );\r\n  }\r\n}\r\n\r\nconst Wrapper = styled.div`\r\n  margin: 50px auto 0;\r\n  width: 60%;\r\n  max-width: 600px;\r\n`;\r\n\r\nconst QuestionsWrapper = styled.div`\r\n  height: 70vh;\r\n  overflow: auto;\r\n`;\r\n\r\nconst List = styled.li`\r\n  border-radius: 5px 5px 0 0;\r\n  button {\r\n    :focus {\r\n      box-shadow: none;\r\n    }\r\n  }\r\n  ${props => props.active && `\r\n    background-color: gray;\r\n    cursor: default;\r\n    button {\r\n      cursor: default;\r\n    }\r\n  `}\r\n`;\r\n\r\nconst mapStateToProps = (store) => {\r\n  const {\r\n    questions,\r\n    loggedInUser\r\n  } = store;\r\n\r\n  return {\r\n    questions,\r\n    loggedInUser\r\n  };\r\n};\r\n\r\nconst withStore = connect(mapStateToProps);\r\n\r\nexport default withStore(Home);\r\n","const SET = \"answeredQuestions/Set\";\r\n\r\nconst UPDATE = \"answeredQuestions/Update\";\r\n\r\nconst updateAnsweredQuestions = (value) => {\r\n  return {\r\n    type: UPDATE,\r\n    value\r\n  }\r\n};\r\n\r\nconst setAnsweredQuestions = (value) => {\r\n  return {\r\n    type: SET,\r\n    value\r\n  }\r\n};\r\n\r\nexport {\r\n  SET,\r\n  UPDATE,\r\n  updateAnsweredQuestions,\r\n  setAnsweredQuestions\r\n};\r\n","const SET = \"users/Set\";\r\nconst UPDATE = \"users/Update\";\r\n\r\nconst updateUsers = (value) => {\r\n  return {\r\n    type: UPDATE,\r\n    value\r\n  }\r\n};\r\n\r\nconst setUsers = (value) => {\r\n  return {\r\n    type: SET,\r\n    value\r\n  }\r\n};\r\n\r\nexport {\r\n  UPDATE,\r\n  SET,\r\n  updateUsers,\r\n  setUsers\r\n};\r\n","const UPDATE = \"questions/Update\";\r\n\r\nconst SET = \"questions/Set\";\r\n\r\nconst updateQuestions = (value) => {\r\n  return {\r\n    type: UPDATE,\r\n    value\r\n  }\r\n};\r\n\r\nconst setQuestions = (value) => {\r\n  return {\r\n    type: SET,\r\n    value\r\n  }\r\n};\r\n\r\nexport {\r\n  UPDATE,\r\n  SET,\r\n  updateQuestions,\r\n  setQuestions\r\n};\r\n","const UPDATE = \"loggedInUser/Update\";\r\n\r\nconst updateLoggedInUser = (value) => {\r\n  return {\r\n    type: UPDATE,\r\n    value\r\n  }\r\n};\r\n\r\nexport {\r\n  UPDATE,\r\n  updateLoggedInUser\r\n};\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport {connect} from \"react-redux\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {_saveQuestion} from \"../utils/DB\";\r\nimport {\r\n  updateQuestions,\r\n  updateLoggedInUser,\r\n  updateUsers\r\n} from \"../ReducersActions/actions\";\r\nclass CreateQuestion extends React.Component {\r\n  state = {\r\n    optionOne: \"\",\r\n    optionTwo: \"\"\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    const {\r\n      name,\r\n      value\r\n    } = e.target;\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  }\r\n\r\n  createQuestion = () => {\r\n    // update questions, users, loggedInUser, unAnsweredQuestions\r\n    const {\r\n      loggedInUser,\r\n      updateQuestions,\r\n      updateLoggedInUser,\r\n      updateUsers,\r\n      history\r\n    } = this.props;\r\n    const {\r\n      optionOne,\r\n      optionTwo\r\n    } = this.state;\r\n    const {id: userId} = loggedInUser;\r\n    _saveQuestion({\r\n      optionOneText: optionOne,\r\n      optionTwoText: optionTwo,\r\n      author: userId\r\n    })\r\n      .then((response) => {\r\n        const {id} = response;\r\n        updateQuestions({\r\n          id,\r\n          object: response\r\n        });\r\n        loggedInUser.questions.push(id)\r\n        updateLoggedInUser(loggedInUser);\r\n        updateUsers({\r\n          id: userId,\r\n          object: loggedInUser\r\n        });\r\n        history.push(\"/home\");\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  render () {\r\n    const {\r\n      optionOne,\r\n      optionTwo\r\n    } = this.state;\r\n    return (\r\n      <Wrapper>\r\n        <div>\r\n          <h3>Create Question</h3>\r\n        </div>\r\n        <QuestionWrapper>\r\n          <h4>Would you rather..</h4>\r\n          <input\r\n            name=\"optionOne\"\r\n            placeholder=\"Option one\"\r\n            value={optionOne}\r\n            onChange={this.handleChange}\r\n          />\r\n          <h3>Or</h3>\r\n          <input\r\n            name=\"optionTwo\"\r\n            placeholder=\"Option two\"\r\n            value={optionTwo}\r\n            onChange={this.handleChange}\r\n          />\r\n          <button\r\n            className=\"btn btn-primary w-50 mt-4 py-2\"\r\n            disabled={!optionOne || !optionTwo}\r\n            onClick={this.createQuestion}\r\n          >\r\n            Submit\r\n          </button>\r\n        </QuestionWrapper>\r\n      </Wrapper>\r\n    );\r\n  }\r\n}\r\n\r\nconst Wrapper = styled.div`\r\n  margin: 20px auto;\r\n  width: 60%;\r\n  max-width: 600px;\r\n`;\r\n\r\nconst QuestionWrapper = styled.div`\r\n  box-shadow: 0 0 10px black;\r\n  border-radius: 5px;\r\n  padding: 20px;\r\n  margin-top: 40px;\r\n  input {\r\n    width: 80%;\r\n    margin: 20px auto;\r\n    border: 0;\r\n    padding: 3px 10px;\r\n    box-shadow: 0 0 4px black;\r\n    border-radius: 3px;\r\n  }\r\n`;\r\n\r\nconst mapStateToProps = (store) => {\r\n  const {\r\n    loggedInUser\r\n  } = store;\r\n  return {\r\n    loggedInUser\r\n  }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  updateQuestions: ({id, object}) => {\r\n    dispatch(updateQuestions({id, object}));\r\n  },\r\n  updateLoggedInUser: (loggedInUser) => {\r\n    dispatch(updateLoggedInUser(loggedInUser));\r\n  },\r\n  updateUsers: ({id, object}) => {\r\n    dispatch(updateUsers({id, object}));\r\n  }\r\n});\r\n\r\nconst withStore = connect(mapStateToProps, mapDispatchToProps);\r\n\r\nexport default withRouter(withStore(CreateQuestion));\r\n","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport styled from \"styled-components\";\r\nimport {ScoreCard} from \"../components\";\r\n\r\nclass Leaderboard extends React.Component {\r\n  state = {\r\n    sortedUsers: []\r\n  }\r\n\r\n  componentDidMount () {\r\n    this.sortUsers();\r\n  }\r\n\r\n  componentDidUpdate (prevProps) {\r\n    if (prevProps.users !== this.props.users)\r\n      this.sortUsers();\r\n  }\r\n\r\n  sortUsers = () => {\r\n    const {users} = this.props;\r\n    if (!users || !Object.keys(users).length) {\r\n      return null;\r\n    }\r\n\r\n    const sortedUsers = Object.values(users).sort((a,b) => {\r\n      const {\r\n        questions: questionsA,\r\n        answers: answersA\r\n      } = a;\r\n\r\n      const {\r\n        questions: questionsB,\r\n        answers: answersB\r\n      } = b;\r\n\r\n      const totalForA = (questionsA.length + Object.keys(answersA).length);\r\n      const totalForB = (questionsB.length + Object.keys(answersB).length);\r\n\r\n      return totalForB - totalForA ;\r\n    });\r\n\r\n    this.setState({\r\n      sortedUsers\r\n    });\r\n  }\r\n  render () {\r\n    const {sortedUsers} = this.state;\r\n    const {loggedInUser} = this.props;\r\n\r\n    if (!sortedUsers.length) {\r\n      return null;\r\n    }\r\n\r\n    const scoreCardView = sortedUsers.map((user) => {\r\n      const {\r\n        name,\r\n        avatarURL,\r\n        answers,\r\n        questions,\r\n        id\r\n      } = user;\r\n      const isAuthorLoggedIn = id === loggedInUser.id;\r\n      const answeredQuestions = Object.keys(answers).length;\r\n      const createdQuestions = questions.length;\r\n      const score = answeredQuestions + createdQuestions;\r\n\r\n      return(\r\n        <ScoreCard\r\n          author={name}\r\n          avatarURL={avatarURL}\r\n          answeredQuestions={answeredQuestions}\r\n          createdQuestions={createdQuestions}\r\n          isAuthorLoggedIn={isAuthorLoggedIn}\r\n          key={id}\r\n          score={score}\r\n        />\r\n      )\r\n    });\r\n\r\n    return (\r\n      <Wrapper>\r\n        <Header>Leaderboard</Header>\r\n        <BoardWrapper>\r\n          {scoreCardView}\r\n        </BoardWrapper>\r\n      </Wrapper>\r\n    );\r\n  }\r\n}\r\n\r\nconst Wrapper = styled.div`\r\n  margin: 20px auto 0;\r\n  width: 60%;\r\n  max-width: 600px;\r\n`;\r\n\r\nconst Header = styled.h3`\r\n  margin-bottom: 40px;\r\n`;\r\n\r\nconst BoardWrapper = styled.div`\r\n`;\r\n\r\nconst mapStateToProps = (store) => {\r\n  const {\r\n    users,\r\n    loggedInUser\r\n  } = store;\r\n  return {\r\n    users,\r\n    loggedInUser\r\n  };\r\n};\r\n\r\nconst withStore = connect(mapStateToProps);\r\n\r\nexport default withStore(Leaderboard);\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n  updateLoggedInUser\r\n} from \"../ReducersActions/actions\";\r\nimport {withRouter} from \"react-router-dom\";\r\nclass Login extends React.Component {\r\n  state = {\r\n    selectedUser: null\r\n  }\r\n\r\n  selectUser = (selectedUser) => {\r\n    this.setState({\r\n      selectedUser\r\n    });\r\n  }\r\n\r\n  setLoggedInUser = () => {\r\n    const {\r\n      setLoggedInUser,\r\n      history\r\n    } = this.props;\r\n    const {selectedUser} = this.state;\r\n    setLoggedInUser(selectedUser)\r\n    history.push(\"/home\");\r\n  }\r\n\r\n  render () {\r\n    const {users} = this.props;\r\n    const {selectedUser} = this.state;\r\n    const usersView = Object.values(users).map((user) => (\r\n        <a\r\n          key={user.id}\r\n          className=\"dropdown-item\"\r\n          onClick={() => this.selectUser(user)}\r\n        >\r\n          {user.name}\r\n        </a>\r\n    ));\r\n\r\n    const buttonText = selectedUser ? selectedUser.name : \"Log in as\";\r\n\r\n    return (\r\n      <Wrapper className=\"dropdown\">\r\n        <div className=\"bg-light text-dark p-3\">\r\n          <h3>Welcome to the Would You Rather app !</h3>\r\n          <p>Please sign in to continue</p>\r\n        </div>\r\n        <div className=\"p-4\">\r\n          <h2>Sign In</h2>\r\n          <button className=\"btn btn-primary dropdown-toggle w-100 mt-5 mb-2\" data-toggle=\"dropdown\">\r\n            {buttonText}\r\n          </button>\r\n          <div className=\"dropdown-menu w-75\">\r\n            {usersView}\r\n          </div>\r\n          <br />\r\n          <button\r\n            className=\"btn btn-secondary mt-3\"\r\n            onClick={this.setLoggedInUser}\r\n            disabled={!selectedUser}\r\n          >\r\n            Sign In\r\n          </button>\r\n        </div>\r\n      </Wrapper>\r\n    )\r\n  }\r\n}\r\n\r\nconst Wrapper = styled.div`\r\n  width: 70%;\r\n  margin: 50px auto;\r\n  max-width: 700px;\r\n  border: 1px solid gray;\r\n  a {\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst mapStateToProps = (store) => {\r\n  const {users} = store;\r\n  return {\r\n    users\r\n  }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  setLoggedInUser: (loggedInUser) => {\r\n    dispatch(updateLoggedInUser(loggedInUser));\r\n  }\r\n});\r\n\r\nconst withStore = connect(mapStateToProps, mapDispatchToProps);\r\n\r\nexport default withRouter(withStore(Login));\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport {connect} from \"react-redux\";\r\nimport {QuestionCard} from  \"../components\";\r\nimport {\r\n  updateQuestions,\r\n  updateLoggedInUser,\r\n  updateUsers\r\n} from \"../ReducersActions/actions\";\r\nclass Question extends React.Component {\r\n  state = {\r\n    showAnswerView: false,\r\n    question: {}\r\n  }\r\n  componentDidMount () {\r\n    this.checkQuestionType();\r\n  }\r\n\r\n  componentDidUpdate (prevProps) {\r\n    if(prevProps.questions !== this.props.questions) {\r\n      this.checkQuestionType();\r\n    }\r\n  }\r\n\r\n  checkQuestionType () {\r\n    const {\r\n      loggedInUser,\r\n      match,\r\n      questions\r\n    } = this.props;\r\n    const {questionId: id} = match.params;\r\n    const question = questions[id];\r\n    if (question) {\r\n      const {\r\n        optionOne,\r\n        optionTwo\r\n      } = question;\r\n      const optionOneVotes = optionOne.votes.length;\r\n      const optionTwoVotes = optionTwo.votes.length;\r\n      const totalVotes = optionOneVotes + optionTwoVotes;\r\n      let optionOnePercentage = !!totalVotes ? (optionOneVotes/totalVotes)*100 : 0;\r\n      let optionTwoPercentage = !!totalVotes ? (optionTwoVotes/totalVotes)*100 : 0;\r\n      optionOnePercentage = optionOnePercentage.toFixed(2);\r\n      optionTwoPercentage = optionTwoPercentage.toFixed(2);\r\n      const userChosen = loggedInUser.answers[id];\r\n      this.setState({\r\n        question: question,\r\n        editAnswerView: loggedInUser.answers[id] ? false : true,\r\n        optionOnePercentage,\r\n        optionTwoPercentage,\r\n        optionOneVotes,\r\n        optionTwoVotes,\r\n        totalVotes,\r\n        userChosen\r\n      });\r\n    }\r\n  }\r\n\r\n  submitAnswer = (selectedAnswer) => {\r\n    const {\r\n      loggedInUser,\r\n      updateQuestions,\r\n      updateLoggedInUser,\r\n      updateUsers\r\n    } = this.props;\r\n    const {id: userId} = loggedInUser;\r\n    const {question} = this.state;\r\n    const {id} = question;\r\n    question[selectedAnswer].votes.push(userId);\r\n    loggedInUser.answers[id] = selectedAnswer;\r\n    //update questions, loggedInUser, users\r\n    updateQuestions({\r\n      id,\r\n      object: question\r\n    });\r\n    updateLoggedInUser(loggedInUser);\r\n    updateUsers({\r\n      id: userId,\r\n      object: loggedInUser\r\n    });\r\n    this.checkQuestionType();\r\n  }\r\n\r\n  render () {\r\n    const {\r\n      question,\r\n      editAnswerView,\r\n      optionOnePercentage,\r\n      optionTwoPercentage,\r\n      optionOneVotes,\r\n      optionTwoVotes,\r\n      userChosen,\r\n      totalVotes\r\n    } = this.state;\r\n\r\n    const {\r\n      id,\r\n      author,\r\n      optionOne,\r\n      optionTwo\r\n    } = question;\r\n\r\n    if (!totalVotes) {\r\n      return (\r\n        <div>404 - No poll found for this question</div>\r\n      )\r\n    }\r\n\r\n    return (\r\n      <Wrapper>\r\n        <QuestionCard\r\n          isEditing={editAnswerView}\r\n          id={id}\r\n          author={author}\r\n          optionOne={optionOne}\r\n          optionTwo={optionTwo}\r\n          submitAnswer={this.submitAnswer}\r\n          optionOnePercentage={optionOnePercentage}\r\n          optionTwoPercentage={optionTwoPercentage}\r\n          optionOneVotes={optionOneVotes}\r\n          optionTwoVotes={optionTwoVotes}\r\n          totalVotes={totalVotes}\r\n          userChosen={userChosen}\r\n        />\r\n      </Wrapper>\r\n    )\r\n  }\r\n}\r\n\r\nconst Wrapper = styled.div`\r\n  margin: 50px auto 0;\r\n  width: 60%;\r\n  max-width: 600px;\r\n`;\r\n\r\nconst mapStateToProps = (store) => {\r\n  const {\r\n    loggedInUser,\r\n    questions\r\n  } = store;\r\n  return {\r\n    loggedInUser,\r\n    questions\r\n  }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  updateQuestions: ({\r\n    id,\r\n    object\r\n  }) => {\r\n    dispatch(updateQuestions({\r\n      id,\r\n      object\r\n    }));\r\n  },\r\n  updateLoggedInUser: (loggedInUser) => {\r\n    dispatch(updateLoggedInUser(loggedInUser));\r\n  },\r\n  updateUsers: ({\r\n    id,\r\n    object\r\n  }) => {\r\n    dispatch(updateUsers({\r\n      id,\r\n      object\r\n    }));\r\n  }\r\n})\r\n\r\nconst withStore = connect(mapStateToProps, mapDispatchToProps);\r\n\r\nexport default withStore(Question);\r\n","import React from 'react';\nimport {\n  Link,\n  Route,\n  BrowserRouter as Router,\n  Switch\n} from 'react-router-dom';\nimport {connect} from \"react-redux\";\nimport {\n  _getQuestions,\n  _getUsers\n} from \"./utils/DB\";\nimport {\n  Home,\n  Leaderboard,\n  CreateQuestion,\n  Login,\n  Question\n} from \"./pages\";\nimport {\n  setUsers,\n  updateLoggedInUser,\n  setQuestions\n} from \"./ReducersActions/actions\";\nimport './App.css';\n\nclass App extends React.Component {\n  componentDidMount () {\n    this.getQuestions();\n    this.getUsers();\n    const {\n      loggedInUser\n    } = this.props;\n    const {pathname} = window.location;\n    // if (!Object.keys(loggedInUser).length && pathname !== \"/login\") {\n    //   window.location.href = \"/login\";\n    // }\n  }\n\n  getQuestions = () => {\n    const {setQuestions} = this.props;\n    _getQuestions()\n      .then((data) => {\n        setQuestions(data);\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  }\n\n  clearLoggedInUser = () => {\n    const {updateLoggedInUser} = this.props;\n    updateLoggedInUser({});\n  }\n\n  getUsers = () => {\n    const {setUsers} = this.props;\n    _getUsers()\n    .then((data) => {\n      setUsers(data);\n    })\n    .catch(error => {\n      console.log(error);\n    });\n  }\n\n  render () {\n    const {\n      loggedInUser\n    } = this.props;\n    return (\n      <div className=\"App\">\n        <Router>\n          {!!loggedInUser.name &&\n            <nav className=\"navbar navbar-expand-sm bg-dark navbar-dark\">\n              <ul className=\"navbar-nav w-100\">\n                <li className=\"nav-item\">\n                  <Link className=\"nav-link\" to=\"/home\">Home</Link>\n                </li>\n                <li className=\"nav-item\">\n                  <Link className=\"nav-link\" to=\"/leaderboard\">Leaderboard</Link>\n                </li>\n                <li className=\"nav-item\">\n                  <Link className=\"nav-link\" to=\"/create-question\">Create Question</Link>\n                </li>\n                <li className=\"nav-item float-right ml-auto\">\n                  <Link className=\"nav-link\" to=\"/home\">Hello, {loggedInUser.name}</Link>\n                </li>\n                <li className=\"nav-item float-right\">\n                  <Link\n                    className=\"nav-link\"\n                    to=\"/login\"\n                    onClick={this.clearLoggedInUser}\n                  >Logout</Link>\n                </li>\n              </ul>\n            </nav>\n          }\n          <Switch>\n            <Route exact component={Login} path=\"/login\" />\n            <Route exact component={Home} path=\"/home\" />\n            <Route exact component={Leaderboard} path=\"/leaderboard\" />\n            <Route exact component={CreateQuestion} path=\"/create-question\" />\n            <Route exact component={Question} path=\"/questions/:questionId\" />\n          </Switch>\n        </Router>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (store) => {\n  const {loggedInUser} = store;\n  return {\n    loggedInUser\n  }\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    setUsers: (questions) => {\n      dispatch(setUsers(questions));\n    },\n    updateLoggedInUser: (questions) => {\n      dispatch(updateLoggedInUser(questions));\n    },\n    setQuestions: (questions) => {\n      dispatch(setQuestions(questions));\n    }\n  }\n};\n\nconst withStore = connect(mapStateToProps, mapDispatchToProps);\n\nexport default withStore(App);\n","import {\r\n  SET,\r\n  UPDATE,\r\n} from \"./action\";\r\n\r\nconst reducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case SET:\r\n      return action.value;\r\n    case UPDATE:\r\n      const {\r\n        id,\r\n        object\r\n      } = action.value;\r\n      state[id] = object;\r\n      return state;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import {\r\n  UPDATE,\r\n  SET\r\n} from \"./action\";\r\n\r\nconst reducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case SET:\r\n      return action.value;\r\n    case UPDATE:\r\n      const {\r\n        id,\r\n        object\r\n      } = action.value;\r\n      state[id] = object;\r\n      return state;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","const UPDATE = \"unansweredQuestions/Update\";\r\n\r\nconst SET =  \"unansweredQuestions/Set\";\r\n\r\nconst updateUnansweredQuestions = (value) => {\r\n  return {\r\n    type: UPDATE,\r\n    value\r\n  }\r\n};\r\n\r\nconst setUnansweredQuestions = (value) => {\r\n  return {\r\n    type: SET,\r\n    value\r\n  }\r\n};\r\n\r\nexport {\r\n  UPDATE,\r\n  SET,\r\n  updateUnansweredQuestions,\r\n  setUnansweredQuestions\r\n};\r\n","import {\r\n  SET,\r\n  UPDATE,\r\n} from \"./action\";\r\n\r\nconst reducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case SET:\r\n      return action.value;\r\n    case UPDATE:\r\n      const {\r\n        id,\r\n        object\r\n      } = action.value;\r\n      state[id] = object;\r\n      return state;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import {\r\n  UPDATE,\r\n  SET,\r\n} from \"./action\";\r\n\r\nconst reducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case SET:\r\n      return action.value;\r\n    case UPDATE:\r\n      const {\r\n        id,\r\n        object\r\n      } = action.value;\r\n      state[id] = object;\r\n      return state;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import {\r\n  UPDATE\r\n} from \"./action\";\r\n\r\nconst reducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case UPDATE:\r\n      return action.value;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import {combineReducers} from \"redux\";\r\nimport answeredQuestions from \"./Answered/reducer\";\r\nimport unAnsweredQuestions from \"./Unanswered/reducer\";\r\nimport users from \"./Users/reducer\";\r\nimport questions from \"./Questions/reducer\";\r\nimport loggedInUser from \"./LoggedInUser/reducer\";\r\n\r\nconst reducer = combineReducers({\r\n  answeredQuestions,\r\n  loggedInUser,\r\n  questions,\r\n  unAnsweredQuestions,\r\n  users\r\n});\r\n\r\nexport default reducer;\r\n","import {createStore} from \"redux\";\r\nimport reducer from \"./ReducersActions/reducers\";\r\n\r\nconst store = createStore(reducer, {\r\n  answeredQuestions: {},\r\n  loggedInUser: {},\r\n  questions: {},\r\n  unAnsweredQuestions: {},\r\n  users: {}\r\n});\r\n\r\nexport default store;\r\n","import React from 'react';\nimport {Provider} from \"react-redux\";\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport store from \"./store\";\n\nReactDOM.render(\n  <Provider store={store}><App /></Provider>, document.getElementById('root'));\n"],"sourceRoot":""}